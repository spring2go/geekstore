extend type Query {
    customerGroups(options: CustomerGroupListOptions): CustomerGroupList!
    customerGroup(id: ID!): CustomerGroup
}

extend type Mutation {
    "Create a new CustomerGroup"
    createCustomerGroup(input: CreateCustomerGroupInput!): CustomerGroup!
    "Update an existing CustomerGroup"
    updateCustomerGroup(input: UpdateCustomerGroupInput!): CustomerGroup!
    "Delete a CustomerGroup"
    deleteCustomerGroup(id: ID!): DeletionResponse!
    "Add Customers to a CustomerGroup"
    addCustomersToGroup(customerGroupId: ID!, customerIds: [ID!]!): CustomerGroup!
    "Remove Customers from a CustomerGroup"
    removeCustomersFromGroup(customerGroupId: ID!, customerIds: [ID!]!): CustomerGroup!
}


type CustomerGroupList implements PaginatedList {
    items: [CustomerGroup!]!
    totalItems: Int!
}

input CustomerGroupListOptions {
    currentPage: Int
    pageSize: Int
    sort: CustomerGroupSortParameter
    filter: CustomerGroupFilterParameter
}

input CreateCustomerGroupInput {
    name: String!
    customerIds: [ID!]
}

input UpdateCustomerGroupInput {
    id: ID!
    name: String
}

input CustomerGroupSortParameter {
    id: SortOrder
    createdAt: SortOrder
    updatedAt: SortOrder
    name: SortOrder
}

input CustomerGroupFilterParameter {
    name: StringOperators
    createdAt: DateOperators
    updatedAt: DateOperators
}