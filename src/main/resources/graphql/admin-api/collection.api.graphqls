extend type Query {
    adminCollections(options: CollectionListOptions): CollectionList!
    "Get a Collection either by id or slug. If neither id nor slug is specified, an error will result."
    adminCollection(id: ID, slug: String): Collection
    collectionFilters: [ConfigurableOperationDefinition!]!
}

extend type Mutation {
    "Create a new Collection"
    createCollection(input: CreateCollectionInput!): Collection!

    "Update an existing Collection"
    updateCollection(input: UpdateCollectionInput!): Collection!

    "Delete a Collection and all of its descendants"
    deleteCollection(id: ID!): DeletionResponse!

    "Move a Collection to a different parent or index"
    moveCollection(input: MoveCollectionInput!): Collection!
}

input CollectionSortParameter {
    id: SortOrder
    createdAt: SortOrder
    updatedAt: SortOrder
    name: SortOrder
    slug: SortOrder
    position: SortOrder
    description: SortOrder
}

input CollectionFilterParameter {
    privateOnly: BooleanOperators
    createdAt: DateOperators
    updatedAt: DateOperators
    name: StringOperators
    slug: StringOperators
    position: NumberOperators
    description: StringOperators
}


input CollectionListOptions {
    currentPage: Int
    pageSize: Int
    sort: CollectionSortParameter
    filter: CollectionFilterParameter
}

input MoveCollectionInput {
    collectionId: ID!
    parentId: ID!
    index: Int!
}

input CreateCollectionInput {
    privateOnly: Boolean
    featuredAssetId: ID
    assetIds: [ID!]
    parentId: ID
    filters: [ConfigurableOperationInput!]!
    name: String!
    slug: String!
    description: String!
}

input UpdateCollectionInput {
    id: ID!
    privateOnly: Boolean
    featuredAssetId: ID
    parentId: ID
    assetIds: [ID!]
    filters: [ConfigurableOperationInput!]
    name: String
    slug: String
    description: String
}

